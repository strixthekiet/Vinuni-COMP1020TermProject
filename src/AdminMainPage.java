/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import java.sql.ResultSet;
import com.sportsinventory.DAO.BookingDAO;
import com.sportsinventory.DAO.AdminDAO;
import com.sportsinventory.DAO.UserDAO;
import com.sportsinventory.DAO.ItemDAO;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Admin
 */
public class AdminMainPage extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public AdminMainPage() {
        initComponents();
        times();
        dt();
    }
    
    public AdminMainPage(String _adminName, String _adminDescript) {
        initComponents();
        times();
        dt();
        setColor(homeButton); 
        ind_1.setOpaque(true);
        resetColor(new JPanel[]{usersButton,inventoryButton}, new JPanel[]{ind_3, ind_4});
        
        adminName.setText(_adminName);
        adminTitle.setText(_adminDescript);
        
        // change button
        jobButton.setText("Email Selected User");
        jobButton.setForeground(Color.blue);
        
        // change table
        DefaultTableModel model = new DefaultTableModel();

        String[] columnNames =  {"Booking ID", "User ID", "Item ID", "Quantity", "Borrow Date", "Return Date", "Status"};
        model.setColumnIdentifiers(columnNames);
        
        ResultSet resultSet = new BookingDAO().getBookingsTable();
        
        // tbh
        // retrieve the current items bookings and add to the rows
        try {
            while (resultSet.next()) {
                Object[] rowData = {
                    resultSet.getInt("bookingID"),
                    resultSet.getInt("userID"),
                    resultSet.getInt("itemID"),
                    resultSet.getInt("Quantity"),
                    resultSet.getDate("borrowDate"),
                    resultSet.getDate("borrowReturn"),
                    resultSet.getString("status")
                };
                model.addRow(rowData);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdminMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            // Close the result set and statement
            resultSet.close();
        } catch (SQLException ex) {
            Logger.getLogger(AdminMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // Set the table model
        mainTable.setModel(model);
    }
    
    public void dt()
    {
        Date d  =new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MMM/YY");
        String date = sdf.format(d);
        dateLabel.setText(date);
        
        SimpleDateFormat sdf2 = new SimpleDateFormat("EEEE");
        String day = sdf2.format(d);
        dayLabel.setText(day);
    }
   
    // time
    Timer t ;
    SimpleDateFormat st ;

    public void times()
    {
        t = new Timer(0, new ActionListener() 
        {
            @Override
            public void actionPerformed(ActionEvent e) 
            {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                Date dt  =new Date();
                st = new SimpleDateFormat("HH:mm:ss");
                String tt = st.format(dt);
                timeLabel.setText(tt);
            }
        });
        t.start();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        side_pane = new javax.swing.JPanel();
        homeButton = new javax.swing.JPanel();
        ind_1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        usersButton = new javax.swing.JPanel();
        ind_3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        inventoryButton = new javax.swing.JPanel();
        ind_4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        topPane = new javax.swing.JPanel();
        searchText = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        mainTableLabel = new javax.swing.JLabel();
        infoPane = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        adminName = new javax.swing.JLabel();
        adminTitle = new javax.swing.JLabel();
        jobButton = new javax.swing.JButton();
        timeLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        dayLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        tablePane = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mainTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setLocationByPlatform(true);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        side_pane.setBackground(new java.awt.Color(0, 153, 0));
        side_pane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        homeButton.setBackground(new java.awt.Color(23, 35, 51));
        homeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                homeButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                homeButtonMouseReleased(evt);
            }
        });

        ind_1.setOpaque(false);
        ind_1.setPreferredSize(new java.awt.Dimension(3, 43));

        javax.swing.GroupLayout ind_1Layout = new javax.swing.GroupLayout(ind_1);
        ind_1.setLayout(ind_1Layout);
        ind_1Layout.setHorizontalGroup(
            ind_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        ind_1Layout.setVerticalGroup(
            ind_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
        );

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Home");

        javax.swing.GroupLayout homeButtonLayout = new javax.swing.GroupLayout(homeButton);
        homeButton.setLayout(homeButtonLayout);
        homeButtonLayout.setHorizontalGroup(
            homeButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeButtonLayout.createSequentialGroup()
                .addComponent(ind_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel8)
                .addGap(0, 48, Short.MAX_VALUE))
        );
        homeButtonLayout.setVerticalGroup(
            homeButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeButtonLayout.createSequentialGroup()
                .addComponent(ind_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(homeButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        side_pane.add(homeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 120, -1));

        usersButton.setBackground(new java.awt.Color(23, 35, 51));
        usersButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                usersButtonMousePressed(evt);
            }
        });

        ind_3.setOpaque(false);
        ind_3.setPreferredSize(new java.awt.Dimension(3, 43));

        javax.swing.GroupLayout ind_3Layout = new javax.swing.GroupLayout(ind_3);
        ind_3.setLayout(ind_3Layout);
        ind_3Layout.setHorizontalGroup(
            ind_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        ind_3Layout.setVerticalGroup(
            ind_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
        );

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Users");

        javax.swing.GroupLayout usersButtonLayout = new javax.swing.GroupLayout(usersButton);
        usersButton.setLayout(usersButtonLayout);
        usersButtonLayout.setHorizontalGroup(
            usersButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usersButtonLayout.createSequentialGroup()
                .addComponent(ind_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel10)
                .addGap(0, 50, Short.MAX_VALUE))
        );
        usersButtonLayout.setVerticalGroup(
            usersButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usersButtonLayout.createSequentialGroup()
                .addComponent(ind_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(usersButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        side_pane.add(usersButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 120, -1));

        inventoryButton.setBackground(new java.awt.Color(23, 35, 51));
        inventoryButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                inventoryButtonMousePressed(evt);
            }
        });

        ind_4.setOpaque(false);
        ind_4.setPreferredSize(new java.awt.Dimension(3, 43));

        javax.swing.GroupLayout ind_4Layout = new javax.swing.GroupLayout(ind_4);
        ind_4.setLayout(ind_4Layout);
        ind_4Layout.setHorizontalGroup(
            ind_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        ind_4Layout.setVerticalGroup(
            ind_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
        );

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Inventory");

        javax.swing.GroupLayout inventoryButtonLayout = new javax.swing.GroupLayout(inventoryButton);
        inventoryButton.setLayout(inventoryButtonLayout);
        inventoryButtonLayout.setHorizontalGroup(
            inventoryButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inventoryButtonLayout.createSequentialGroup()
                .addComponent(ind_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel11)
                .addGap(0, 30, Short.MAX_VALUE))
        );
        inventoryButtonLayout.setVerticalGroup(
            inventoryButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inventoryButtonLayout.createSequentialGroup()
                .addComponent(ind_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(inventoryButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        side_pane.add(inventoryButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 120, -1));

        getContentPane().add(side_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 120, 540));

        topPane.setBackground(new java.awt.Color(51, 204, 0));
        topPane.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                topPaneMouseDragged(evt);
            }
        });
        topPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                topPaneMousePressed(evt);
            }
        });

        searchText.setBackground(new java.awt.Color(204, 255, 204));
        searchText.setBorder(null);
        searchText.setCaretColor(new java.awt.Color(255, 255, 255));
        searchText.setPreferredSize(new java.awt.Dimension(2, 20));
        searchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextActionPerformed(evt);
            }
        });

        searchButton.setBackground(new java.awt.Color(51, 204, 0));
        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_Search_18px.png"))); // NOI18N
        searchButton.setBorderPainted(false);
        searchButton.setMaximumSize(new java.awt.Dimension(40, 40));
        searchButton.setMinimumSize(new java.awt.Dimension(40, 40));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        mainTableLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        mainTableLabel.setForeground(new java.awt.Color(255, 255, 255));
        mainTableLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainTableLabel.setText("Current Bookings");

        javax.swing.GroupLayout topPaneLayout = new javax.swing.GroupLayout(topPane);
        topPane.setLayout(topPaneLayout);
        topPaneLayout.setHorizontalGroup(
            topPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPaneLayout.createSequentialGroup()
                .addContainerGap(217, Short.MAX_VALUE)
                .addComponent(mainTableLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(199, 199, 199)
                .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        topPaneLayout.setVerticalGroup(
            topPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(topPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainTableLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(topPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 0, 840, 50));

        infoPane.setBackground(new java.awt.Color(51, 204, 0));

        jPanel4.setBackground(new java.awt.Color(0, 153, 0));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        adminName.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        adminName.setForeground(new java.awt.Color(255, 255, 255));
        adminName.setText("PT. Nguyen Hoang");
        jPanel4.add(adminName, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 260, 30));

        adminTitle.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        adminTitle.setForeground(new java.awt.Color(255, 255, 255));
        adminTitle.setText("SPR2023 - VCOR1022 Coach");
        jPanel4.add(adminTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, -1, -1));

        jobButton.setText("Email Selected Users");
        jobButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jobButtonActionPerformed(evt);
            }
        });

        timeLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 48)); // NOI18N
        timeLabel.setForeground(new java.awt.Color(255, 255, 255));
        timeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeLabel.setText("time");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/logoTransparent_1.png"))); // NOI18N

        dayLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        dayLabel.setForeground(new java.awt.Color(255, 255, 255));
        dayLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dayLabel.setText("day");

        dateLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        dateLabel.setForeground(new java.awt.Color(255, 255, 255));
        dateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dateLabel.setText("date");

        javax.swing.GroupLayout infoPaneLayout = new javax.swing.GroupLayout(infoPane);
        infoPane.setLayout(infoPaneLayout);
        infoPaneLayout.setHorizontalGroup(
            infoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPaneLayout.createSequentialGroup()
                .addGroup(infoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(infoPaneLayout.createSequentialGroup()
                        .addComponent(dayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(infoPaneLayout.createSequentialGroup()
                        .addGroup(infoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(infoPaneLayout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(infoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jobButton, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(infoPaneLayout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(jLabel1)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(timeLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        infoPaneLayout.setVerticalGroup(
            infoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPaneLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(infoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(28, 28, 28)
                .addComponent(jobButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        getContentPane().add(infoPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 260, 490));

        tablePane.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        mainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Strix", "racket", "13:45 13/05", "3 days", "13:45 16/05"},
                {"Hung", "Football ball", "14:10 10/05", "1 week", "14:10 17/05"},
                {"Sebastian", "volleyball", "09:10 11/05", "3 hours", "12:10 11/05"},
                {"Prof Wong", "Swimsuit", "10:55 14/05", "50 mins", "10:55 14/05"},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "User", "Item Name", "Borrowed Date", "Duration", "Return Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        mainTable.setGridColor(new java.awt.Color(255, 255, 255));
        mainTable.setMaximumSize(new java.awt.Dimension(568, 490));
        mainTable.setMinimumSize(new java.awt.Dimension(568, 490));
        mainTable.setPreferredSize(new java.awt.Dimension(568, 490));
        mainTable.setRowHeight(30);
        mainTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(mainTable);
        if (mainTable.getColumnModel().getColumnCount() > 0) {
            mainTable.getColumnModel().getColumn(2).setPreferredWidth(30);
            mainTable.getColumnModel().getColumn(3).setPreferredWidth(27);
            mainTable.getColumnModel().getColumn(4).setPreferredWidth(30);
        }

        javax.swing.GroupLayout tablePaneLayout = new javax.swing.GroupLayout(tablePane);
        tablePane.setLayout(tablePaneLayout);
        tablePaneLayout.setHorizontalGroup(
            tablePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tablePaneLayout.setVerticalGroup(
            tablePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
        );

        getContentPane().add(tablePane, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, 580, 490));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeButtonMousePressed
        // TODO add your handling code here:
        homeButtonPressSom();
    }//GEN-LAST:event_homeButtonMousePressed
    
    public void homeButtonPressSom() {
        setColor(homeButton); 
        ind_1.setOpaque(true);
        resetColor(new JPanel[]{usersButton,inventoryButton}, new JPanel[]{ind_3, ind_4});
        
        // change button
        jobButton.setText("Email Selected User");
        jobButton.setForeground(Color.blue);
        mainTableLabel.setText("Current Bookings");
        // change table
        DefaultTableModel model = new DefaultTableModel();

        String[] columnNames =  {"Booking ID", "User ID", "Item ID", "Quantity", "Borrow Date", "Return Date", "Status"};
        model.setColumnIdentifiers(columnNames);
        
        ResultSet resultSet = new BookingDAO().getBookingsTable();
        
        // tbh
        // retrieve the current items bookings and add to the rows
        try {
            while (resultSet.next()) {
                Object[] rowData = {
                    resultSet.getInt("bookingID"),
                    resultSet.getInt("userID"),
                    resultSet.getInt("itemID"),
                    resultSet.getInt("Quantity"),
                    resultSet.getDate("borrowDate"),
                    resultSet.getDate("borrowReturn"),
                    resultSet.getString("status")
                };
                model.addRow(rowData);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdminMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            // Close the result set and statement
            resultSet.close();
        } catch (SQLException ex) {
            Logger.getLogger(AdminMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // Set the table model
        mainTable.setModel(model);
    }
    
    private void usersButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usersButtonMousePressed
        // TODO add your handling code here:
        userButtonPressSom();
    }//GEN-LAST:event_usersButtonMousePressed
    
    public void userButtonPressSom() {
        setColor(usersButton); 
        ind_3.setOpaque(true);
        resetColor(new JPanel[]{homeButton,inventoryButton}, new JPanel[]{ind_1, ind_4});
        // change button
        jobButton.setText("Add New User");
        jobButton.setForeground(Color.orange);
        mainTableLabel.setText("All Users");
        // change table
        DefaultTableModel model = new DefaultTableModel();

        String[] columnNames =  {"Student ID", "Full Name", "Register Date", "User Name"};
        model.setColumnIdentifiers(columnNames);
        
        ResultSet resultSet = new UserDAO().getQueryResult();
        
        // tbh
        // retrieve the current items bookings and add to the rows
        
        try {
            while (resultSet.next()) {
                Object[] rowData = {
                    resultSet.getInt("userID"),
                    resultSet.getString("fullname"),
                    resultSet.getDate("regDate"),
                    resultSet.getString("username")
                };
                model.addRow(rowData);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdminMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            // Close the result set and statement
            resultSet.close();
        } catch (SQLException ex) {
            Logger.getLogger(AdminMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }

        
        // Set the table model
        mainTable.setModel(model);
    }
    
    private void inventoryButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventoryButtonMousePressed
        // TODO add your handling code here:
        inventoryButtonPressSom();
    }//GEN-LAST:event_inventoryButtonMousePressed
    
    public void inventoryButtonPressSom() {
        setColor(inventoryButton); 
        ind_4.setOpaque(true);
        resetColor(new JPanel[]{usersButton,homeButton}, new JPanel[]{ind_3, ind_1});
        
        // change button
        jobButton.setText("Add New Item"); // only delete the onces not in use
        jobButton.setForeground(Color.red);
        mainTableLabel.setText("Available Items");
        // change table
        DefaultTableModel model = new DefaultTableModel();

        String[] columnNames =  {"Item ID", "Item Name", "Quantity", "Condition"};
        model.setColumnIdentifiers(columnNames);
        
        ResultSet resultSet = new ItemDAO().getItemTable();
        
        // tbh
        // retrieve the current items bookings and add to the rows
        
        try {
            while (resultSet.next()) {
                Object[] rowData = {
                    resultSet.getInt("itemID"),
                    resultSet.getString("name"),
                    resultSet.getInt("Quantity"),
                    resultSet.getString("Condition")
                };
                model.addRow(rowData);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdminMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            // Close the result set and statement
            resultSet.close();
        } catch (SQLException ex) {
            Logger.getLogger(AdminMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // Set the table model
        mainTable.setModel(model);
    }
    
    int xx,xy;
    private void topPaneMousePressed(java.awt.event.MouseEvent evt) {     
        // TODO add your handling code here:
        //drag this pane
        xx = evt.getX();
        xy = evt.getY();
    }                                    

    private void topPaneMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topPaneMouseDragged
        // TODO add your handling code here:
        
        //source to drag
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x-xx,y-xy);
    }//GEN-LAST:event_topPaneMouseDragged

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        
        //search
        TableRowSorter<TableModel> sorter = new TableRowSorter<>(((DefaultTableModel) mainTable.getModel())); 
        sorter.setRowFilter(RowFilter.regexFilter(searchText.getText()));

        mainTable.setRowSorter(sorter);
    }//GEN-LAST:event_searchButtonActionPerformed

    private void searchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextActionPerformed

    private void homeButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeButtonMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_homeButtonMouseReleased

    private void jobButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jobButtonActionPerformed
        // TODO add your handling code here:
        switch(jobButton.getText())
        {
            case "Email Selected User" -> 
            {
                int rowSelected = mainTable.getSelectedRow();
                
                if(rowSelected == -1) // no item is selected
                {
                    return;
                }
                try 
                {
                    int rowSelect = mainTable.getSelectedRow();
                    String bookingID = mainTable.getValueAt(rowSelect, 0).toString();  //get from selected row
                   
                    // get from db
                    
                    ResultSet rs = new BookingDAO().getBookingsRowInfo(Integer.parseInt(bookingID));
                    
                    String borrowDate = "";
                    String returnDate = "";
                    int quantity = 1;
                    int userID = 0;
                    String itemCondition= "good";
                    
                    try {
                        if (rs.next()) {
                            borrowDate = rs.getDate("borrowDate").toString();
                            returnDate = rs.getDate("borrowReturn").toString();
                            quantity = rs.getInt("quantity");
                            userID = rs.getInt("userID");
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(AdminMainPage.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    ResultSet rs2 = new UserDAO().getUserInfo(userID);
                    String studentName = "";
                    String email = "email1@example.com";
                    String studentID = "V" + userID;
                    
                    try {
                        if (rs2.next()) {
                            studentName = rs2.getString("fullname");
                            email = rs2.getString("email");
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(AdminMainPage.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    itemCondition = itemCondition.replaceAll("%", "%25");
                    
                    String subject = "Late Return Notice - Booking ID " + bookingID;

                    String body = "Dear " + studentName + ",%0D%0A%0D%0A"
                + "We hope this email finds you well. We are writing to inform you that we have noticed a delay in the return of certain sport equipment items that were borrowed by you from VinEquip, the sport equipment department of Vinuniversity. Your cooperation in promptly returning these items is greatly appreciated.%0D%0A%0D%0A"
                + "Here are the details of the late items:%0D%0A%0D%0A"
                + "Booking ID: " + bookingID + "%0D%0A"
                + "Student ID: " + studentID + "%0D%0A"
                + "Student Name: " + studentName + "%0D%0A%0D%0A"
                + "Item Condition:%0D%0A"
                + itemCondition + "%0D%0A%0D%0A"
                + "Borrow Date: " + borrowDate + "%0D%0A"
                + "Return Date (Expected): " + returnDate + "%0D%0A";


                    String url = "mailto:" + email + "?subject=" + subject.replaceAll(" ","%20") + "&body=" + body.replaceAll(" ", "%20");
                    java.awt.Desktop.getDesktop().browse(java.net.URI.create(url));
                }
                catch (java.io.IOException e) 
                {
                    JOptionPane.showMessageDialog(null, "Browsers can't be opened", "URL error", JOptionPane.ERROR_MESSAGE);
                }
                
            }
            case "Add New User" -> 
            {
                AddUser ad = new AddUser(this);
                ad.setVisible(true);
            }
            case "Add New Item" -> 
            {
                int lastID = 0;
                ResultSet rs = new ItemDAO().getLastRow();
                try{ 
                    if (rs.next())
                        lastID = rs.getInt("itemID");
                } catch (SQLException ex) {
                    Logger.getLogger(AdminMainPage.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
                AddItem it = new AddItem(lastID + 1, this);
                it.setVisible(true);
            }
            default -> {
            }
            
        }
    }//GEN-LAST:event_jobButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminMainPage().setVisible(true);
            }
        });
    }
   
    
    private void setColor(JPanel pane)
    {
        pane.setBackground(new Color(41,57,80));
    }
    
    private void resetColor(JPanel [] pane, JPanel [] indicators)
    {
        for(int i=0;i<pane.length;i++){
           pane[i].setBackground(new Color(23,35,51));
           
        } for(int i=0;i<indicators.length;i++){
           indicators[i].setOpaque(false);           
        }
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel adminName;
    private javax.swing.JLabel adminTitle;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JLabel dayLabel;
    private javax.swing.JPanel homeButton;
    private javax.swing.JPanel ind_1;
    private javax.swing.JPanel ind_3;
    private javax.swing.JPanel ind_4;
    private javax.swing.JPanel infoPane;
    private javax.swing.JPanel inventoryButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jobButton;
    private javax.swing.JTable mainTable;
    private javax.swing.JLabel mainTableLabel;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchText;
    private javax.swing.JPanel side_pane;
    private javax.swing.JPanel tablePane;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JPanel topPane;
    private javax.swing.JPanel usersButton;
    // End of variables declaration//GEN-END:variables
    

}
