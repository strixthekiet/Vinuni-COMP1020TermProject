
import com.sportsinventory.DAO.BookingDAO;
import com.sportsinventory.DAO.ItemDAO;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author strix
 */
public class AtheleteMainPage extends javax.swing.JFrame {

    /**
     * Creates new form AtheleteMainPage
     */
    public int userID;
    public AtheleteMainPage() {
        initComponents();
        setColor(homeButton); 
        idnHomeButton.setOpaque(true);
        resetColor(new JPanel[]{inventoryButton}, new JPanel[]{idnInventoryButton});
        jobButton.setForeground(Color.orange);
        times();
        dt();
    }
    
    public AtheleteMainPage(String _userName, String _userDescript, int _userID) {
        initComponents();
        setColor(homeButton);
        
        userName.setText(_userName);
        userTitle.setText(_userDescript);
        
        userID = _userID;
        idnHomeButton.setOpaque(true);
        resetColor(new JPanel[]{inventoryButton}, new JPanel[]{idnInventoryButton});
        jobButton.setForeground(Color.orange);
        times();
        dt();
    }
    
    public void dt()
    {
        Date d  =new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MMM/YY");
        String date = sdf.format(d);
        dateLabel.setText(date);
        
        SimpleDateFormat sdf2 = new SimpleDateFormat("EEEE");
        String day = sdf2.format(d);
        dayLabel.setText(day);
    }
   
    // time
    Timer t ;
    SimpleDateFormat st ;

    public void times()
    {
        t = new Timer(0, new ActionListener() 
        {
            @Override
            public void actionPerformed(ActionEvent e) 
            {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                Date dt  =new Date();
                st = new SimpleDateFormat("HH:mm:ss");
                String tt = st.format(dt);
                timeLabel.setText(tt);
            }
        });
        t.start();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        infoPane = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        userName = new javax.swing.JLabel();
        userTitle = new javax.swing.JLabel();
        jobButton = new javax.swing.JButton();
        timeLabel = new javax.swing.JLabel();
        dayLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        tablePane = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mainTable = new javax.swing.JTable();
        side_panel = new javax.swing.JPanel();
        homeButton = new javax.swing.JPanel();
        idnHomeButton = new javax.swing.JPanel();
        homeButtonText = new javax.swing.JLabel();
        inventoryButton = new javax.swing.JPanel();
        idnInventoryButton = new javax.swing.JPanel();
        inventorytext = new javax.swing.JLabel();
        topPane = new javax.swing.JPanel();
        searchText = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        mainTableLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        infoPane.setBackground(new java.awt.Color(51, 204, 0));

        jPanel4.setBackground(new java.awt.Color(0, 153, 0));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        userName.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        userName.setForeground(new java.awt.Color(255, 255, 255));
        userName.setText("Nguyen Don The Kiet");
        jPanel4.add(userName, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 260, 30));

        userTitle.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        userTitle.setForeground(new java.awt.Color(255, 255, 255));
        userTitle.setText("Cohort 3 CECS");
        jPanel4.add(userTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 260, -1));

        jobButton.setText("Return Selected Item");
        jobButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jobButtonActionPerformed(evt);
            }
        });

        timeLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 36)); // NOI18N
        timeLabel.setForeground(new java.awt.Color(255, 255, 255));
        timeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeLabel.setText("time");

        dayLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        dayLabel.setForeground(new java.awt.Color(255, 255, 255));
        dayLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dayLabel.setText("day");

        dateLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        dateLabel.setForeground(new java.awt.Color(255, 255, 255));
        dateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dateLabel.setText("date");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/logoTransparent_1.png"))); // NOI18N

        javax.swing.GroupLayout infoPaneLayout = new javax.swing.GroupLayout(infoPane);
        infoPane.setLayout(infoPaneLayout);
        infoPaneLayout.setHorizontalGroup(
            infoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPaneLayout.createSequentialGroup()
                .addGroup(infoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(timeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(infoPaneLayout.createSequentialGroup()
                        .addGroup(infoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(infoPaneLayout.createSequentialGroup()
                                .addComponent(dayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(infoPaneLayout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jLabel1))
                            .addGroup(infoPaneLayout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jobButton, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        infoPaneLayout.setVerticalGroup(
            infoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPaneLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(infoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jobButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        getContentPane().add(infoPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 260, 490));

        tablePane.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        mainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(1), "racket", "13:45 13/05", "13:45 16/05", "100% new", null},
                { new Integer(2), "Football ball", "14:10 10/05", "14:10 17/05", null,  new Integer(34)},
                { new Integer(3), "volleyball", "09:10 11/05", "12:10 11/05", null, null},
                { new Integer(5), "Swimsuit", "10:55 14/05", "10:55 14/05", null,  new Integer(2)},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Item Name", "Borrowed Date", "Return Date", "Condition", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        mainTable.setGridColor(new java.awt.Color(255, 255, 255));
        mainTable.setRowHeight(22);
        mainTable.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPane1.setViewportView(mainTable);

        javax.swing.GroupLayout tablePaneLayout = new javax.swing.GroupLayout(tablePane);
        tablePane.setLayout(tablePaneLayout);
        tablePaneLayout.setHorizontalGroup(
            tablePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePaneLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
                .addContainerGap())
        );
        tablePaneLayout.setVerticalGroup(
            tablePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
        );

        getContentPane().add(tablePane, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 55, 580, 480));

        side_panel.setBackground(new java.awt.Color(0, 153, 0));
        side_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        homeButton.setBackground(new java.awt.Color(23, 35, 51));
        homeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                homeButtonMousePressed(evt);
            }
        });

        idnHomeButton.setOpaque(false);
        idnHomeButton.setPreferredSize(new java.awt.Dimension(3, 43));

        javax.swing.GroupLayout idnHomeButtonLayout = new javax.swing.GroupLayout(idnHomeButton);
        idnHomeButton.setLayout(idnHomeButtonLayout);
        idnHomeButtonLayout.setHorizontalGroup(
            idnHomeButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        idnHomeButtonLayout.setVerticalGroup(
            idnHomeButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
        );

        homeButtonText.setForeground(new java.awt.Color(255, 255, 255));
        homeButtonText.setText("Home");

        javax.swing.GroupLayout homeButtonLayout = new javax.swing.GroupLayout(homeButton);
        homeButton.setLayout(homeButtonLayout);
        homeButtonLayout.setHorizontalGroup(
            homeButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeButtonLayout.createSequentialGroup()
                .addComponent(idnHomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(homeButtonText)
                .addGap(0, 48, Short.MAX_VALUE))
        );
        homeButtonLayout.setVerticalGroup(
            homeButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeButtonLayout.createSequentialGroup()
                .addComponent(idnHomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(homeButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(homeButtonText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        side_panel.add(homeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 120, -1));

        inventoryButton.setBackground(new java.awt.Color(23, 35, 51));
        inventoryButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                inventoryButtonMousePressed(evt);
            }
        });

        idnInventoryButton.setOpaque(false);
        idnInventoryButton.setPreferredSize(new java.awt.Dimension(3, 43));

        javax.swing.GroupLayout idnInventoryButtonLayout = new javax.swing.GroupLayout(idnInventoryButton);
        idnInventoryButton.setLayout(idnInventoryButtonLayout);
        idnInventoryButtonLayout.setHorizontalGroup(
            idnInventoryButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        idnInventoryButtonLayout.setVerticalGroup(
            idnInventoryButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
        );

        inventorytext.setForeground(new java.awt.Color(255, 255, 255));
        inventorytext.setText("Inventory");

        javax.swing.GroupLayout inventoryButtonLayout = new javax.swing.GroupLayout(inventoryButton);
        inventoryButton.setLayout(inventoryButtonLayout);
        inventoryButtonLayout.setHorizontalGroup(
            inventoryButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inventoryButtonLayout.createSequentialGroup()
                .addComponent(idnInventoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(inventorytext)
                .addGap(0, 30, Short.MAX_VALUE))
        );
        inventoryButtonLayout.setVerticalGroup(
            inventoryButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inventoryButtonLayout.createSequentialGroup()
                .addComponent(idnInventoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(inventoryButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inventorytext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        side_panel.add(inventoryButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 120, -1));

        getContentPane().add(side_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 540));

        topPane.setBackground(new java.awt.Color(51, 204, 0));
        topPane.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                topPaneMouseDragged(evt);
            }
        });
        topPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                topPaneMousePressed(evt);
            }
        });

        searchText.setBackground(new java.awt.Color(204, 255, 204));
        searchText.setBorder(null);
        searchText.setCaretColor(new java.awt.Color(255, 255, 255));
        searchText.setPreferredSize(new java.awt.Dimension(2, 20));

        searchButton.setBackground(new java.awt.Color(51, 204, 0));
        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_Search_18px.png"))); // NOI18N
        searchButton.setBorderPainted(false);
        searchButton.setMaximumSize(new java.awt.Dimension(40, 40));
        searchButton.setMinimumSize(new java.awt.Dimension(40, 40));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        mainTableLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        mainTableLabel.setForeground(new java.awt.Color(255, 255, 255));
        mainTableLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainTableLabel.setText("Current Bookings");

        javax.swing.GroupLayout topPaneLayout = new javax.swing.GroupLayout(topPane);
        topPane.setLayout(topPaneLayout);
        topPaneLayout.setHorizontalGroup(
            topPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPaneLayout.createSequentialGroup()
                .addContainerGap(652, Short.MAX_VALUE)
                .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(topPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(topPaneLayout.createSequentialGroup()
                    .addGap(302, 302, 302)
                    .addComponent(mainTableLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(302, Short.MAX_VALUE)))
        );
        topPaneLayout.setVerticalGroup(
            topPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPaneLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(topPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(topPaneLayout.createSequentialGroup()
                    .addGap(5, 5, 5)
                    .addComponent(mainTableLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        getContentPane().add(topPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 0, 840, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    int xx,xy;
    private void homeButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeButtonMousePressed
        // TODO add your handling code here:
        homeButtonPressSom();
       
    }//GEN-LAST:event_homeButtonMousePressed
    public void homeButtonPressSom()
    {
     // TODO add your handling code here:
        setColor(homeButton);
        idnHomeButton.setOpaque(true);
        resetColor(new JPanel[]{inventoryButton}, new JPanel[]{idnInventoryButton});
        // change button
        jobButton.setText("Return Selected Item");
        jobButton.setForeground(Color.orange);
        mainTableLabel.setText("Your Bookings");
        // change table
        DefaultTableModel model = new DefaultTableModel();

        String[] columnNames =  {"Booking ID", "Item ID", "Item Name", "Condtion", "Quantity", "Borrow Date", "Return Date"};
        model.setColumnIdentifiers(columnNames);
        
        ResultSet resultSet = new BookingDAO().getBookingsTable();

        // tbh
        // retrieve the current items bookings and add to the rows
        try {
            while (resultSet.next()) {
                int _userID = resultSet.getInt("userID");
                String _status = resultSet.getString("status");
         
                if(userID == _userID && _status.equals("borrowing"))
                {
                    ResultSet rsItem = null;
                    int _itemID = resultSet.getInt("itemID");
                    rsItem = new ItemDAO().getItemIDRow(_itemID);
                    
                    String condition = "";
                    String itemName = "";
                    if (rsItem.next()) 
                    {
                        condition = rsItem.getString("condition");
                        itemName = rsItem.getString("name");
                    }
                     
                    Object[] rowData = {
                        resultSet.getInt("bookingID"),
                        resultSet.getInt("itemID"),
                        itemName,
                        condition,
                        resultSet.getInt("Quantity"),
                        resultSet.getDate("borrowDate"),
                        resultSet.getDate("borrowReturn")
                    };
                    model.addRow(rowData);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdminMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            // Close the result set and statement
            resultSet.close();
        } catch (SQLException ex) {
            Logger.getLogger(AdminMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // Set the table model
        mainTable.setModel(model);   
    }
    private void inventoryButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventoryButtonMousePressed
        
        inventoryButtonPressSim();
        
    }//GEN-LAST:event_inventoryButtonMousePressed

    public void inventoryButtonPressSim()
    {
    // TODO add your handling code here:
        setColor(inventoryButton);
        idnInventoryButton.setOpaque(true);
        resetColor(new JPanel[]{homeButton}, new JPanel[]{idnHomeButton});
        // change button
        jobButton.setText("Borrow Selected Item");
        jobButton.setForeground(Color.black);
        mainTableLabel.setText("Available Items");
        
        // change table
        DefaultTableModel model = new DefaultTableModel();

        String[] columnNames =  {"Item ID", "Item Name", "Condtion", "Quantity"};
        model.setColumnIdentifiers(columnNames);
        
        ResultSet resultSet = new ItemDAO().getItemTable();
        

        try {
            while (resultSet.next()) 
            {
                int _quantity = resultSet.getInt("quantity");
                if(_quantity <= 0)
                    continue;
                Object[] rowData = {
                        resultSet.getInt("itemID"),
                        resultSet.getString("name"),
                        resultSet.getString("condition"),
                        _quantity
                    };
                model.addRow(rowData);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AtheleteMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // Set the table model
        mainTable.setModel(model);
    }
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        
        //search
        TableRowSorter<TableModel> sorter = new TableRowSorter<>(((DefaultTableModel) mainTable.getModel())); 
        sorter.setRowFilter(RowFilter.regexFilter(searchText.getText()));

        mainTable.setRowSorter(sorter);
        
    }//GEN-LAST:event_searchButtonActionPerformed

    private void topPaneMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topPaneMouseDragged
        // TODO add your handling code here:

        //source to drag
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x-xx,y-xy);
    }//GEN-LAST:event_topPaneMouseDragged

    private void topPaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topPaneMousePressed
        // TODO add your handling code here:
        //drag this pane
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_topPaneMousePressed

    private void jobButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jobButtonActionPerformed
        // TODO add your handling code here:
        if(jobButton.getText().equals("Return Selected Item"))
        {
            int option = JOptionPane.showConfirmDialog(null, "Have you put corresponding item(s) back to the storage?", "Return Item Confirmation",1);
            switch (option) {
                case 0: // yes
                    int row = mainTable.getSelectedRow();
                    int selectedBookingID = Integer.parseInt(mainTable.getValueAt(row, 0).toString());
                    int selectedQuantity = Integer.parseInt(mainTable.getValueAt(row, 4).toString());
                    int selectedItemID = Integer.parseInt(mainTable.getValueAt(row, 1).toString());
                    new BookingDAO().updateStatus(selectedBookingID, "returned");
                    ResultSet rs = new ItemDAO().getItemIDRow(selectedItemID);
                {
                    try {
                        if (rs.next())
                            new ItemDAO().updateQuantity(rs.getInt("quantity") + selectedQuantity, selectedItemID);
                    } catch (SQLException ex) {
                        Logger.getLogger(AtheleteMainPage.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                    homeButtonPressSom();
                    break;

                case 1: // no
                    JOptionPane.showMessageDialog(null, "Please return item to storage room on time!");
                    break;
                    
                case 2: // cancel
                    break;
                default:
                    throw new AssertionError();
            }
        }
        else if(jobButton.getText().equals("Borrow Selected Item"))
        {
            int row = mainTable.getSelectedRow();
            if(row == -1)
                return;
            String itemName = mainTable.getModel().getValueAt(row, 1).toString();
            String ID = mainTable.getModel().getValueAt(row,0).toString();
            String quantity = mainTable.getModel().getValueAt(row,3).toString();
            
            Confirmation cf = new Confirmation(itemName, ID, quantity, userID, this);
            cf.setVisible(true);
        }
    }//GEN-LAST:event_jobButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AtheleteMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AtheleteMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AtheleteMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AtheleteMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AtheleteMainPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dateLabel;
    private javax.swing.JLabel dayLabel;
    private javax.swing.JPanel homeButton;
    private javax.swing.JLabel homeButtonText;
    private javax.swing.JPanel idnHomeButton;
    private javax.swing.JPanel idnInventoryButton;
    private javax.swing.JPanel infoPane;
    private javax.swing.JPanel inventoryButton;
    private javax.swing.JLabel inventorytext;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jobButton;
    private javax.swing.JTable mainTable;
    private javax.swing.JLabel mainTableLabel;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchText;
    private javax.swing.JPanel side_panel;
    private javax.swing.JPanel tablePane;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JPanel topPane;
    private javax.swing.JLabel userName;
    private javax.swing.JLabel userTitle;
    // End of variables declaration//GEN-END:variables
     private void setColor(JPanel pane)
    {
        pane.setBackground(new Color(41,57,80));
    }
    
    private void resetColor(JPanel [] pane, JPanel [] indicators)
    {
        for(int i=0;i<pane.length;i++){
           pane[i].setBackground(new Color(23,35,51));
           
        } 
        for(int i=0;i<indicators.length;i++){
           indicators[i].setOpaque(false);           
        }
        
    }
}
